on:
  push:
    tags:
      - "v*"

name: Create Release

jobs:
  deploy:
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check Prerelease
        id: check-prerelease
        run: |
          if echo "${{ github.ref_name }}" | grep -Pq "^v[\d]+.[\d]+.[\d]+(?:.(alpha|beta).[\d]+)$"; then
            echo "prerelease=true" >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref }}
          name: ${{ github.ref_name }}
          generateReleaseNotes: true
          prerelease: ${{ steps.check-prerelease.outputs.prerelease == 'true' }}

      - name: Download artifact
        uses: dawidd6/action-download-artifact@v6
        with:
          commit: ${{env.GITHUB_SHA}}
          workflow: ci.yaml
          workflow_conclusion: success

      - name: Package
        run: |
          (cd stfc-community-patch && zip -r - .) > stfc-community-patch.zip

      - name: Upload Community Patch
        id: upload-patch
        uses: shogo82148/actions-upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./stfc-community-patch.zip
          asset_name: stfc-community-patch.zip
          asset_content_type: application/zip

      - name: Upload Community Patch
        id: upload-patch-versioned
        uses: shogo82148/actions-upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./stfc-community-patch.zip
          asset_name: stfc-community-patch-${{ github.ref_name }}.zip
          asset_content_type: application/zip
